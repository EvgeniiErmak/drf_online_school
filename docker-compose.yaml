# docker-compose.yaml

version: "3.9"

services:
  db:
    image: postgres:14.6-alpine
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7.0.11

  web:
    build: .
    tty: true
    volumes:
      - .:/app
    restart: on-failure
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --no-input &&
             gunicorn --bind 0.0.0.0:8000 drf_online_school.wsgi"

  celery:
    build: .
    tty: true
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
    command: celery -A drf_online_school worker --beat --scheduler django --loglevel=info

volumes:
  postgres_data:
